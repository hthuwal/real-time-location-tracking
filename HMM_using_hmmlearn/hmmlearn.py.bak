import numpy as np 
import pandas as pd
import os
import sys

from hmmlearn import hmm

df = pd.read_csv('modified_training_day_log.csv')
del df['Unnamed: 0']

df = df[df['controllerid'] == 1]
df.reset_index(inplace=True, drop=True)
df['pwr'] = df['pwr'].astype('int64')

grp = df.groupby(['mac'])
df1 = grp.count()
df1.sort_values(['pwr'], inplace=True, ascending=False)
macs = df1[df1['pwr']>=60].index
macs = macs.tolist()
df = df[df['mac'].isin(macs)]
df.reset_index(inplace=True, drop=True)
df.sort_values(['mac', 'ts'], inplace=True)
df.reset_index(inplace=True, drop=True)
print df

grp = df.groupby(['mac'])
lst = list(grp)
observed_sequences = []
observed_timestamps = []
len_samples = np.zeros(len(lst))
for i in range(len(lst)):
    x = lst[i]
    ts_list = np.asarray(x[1]['ts'])
    len_samples[i] = len(ts_list)
    pwr_list = np.zeros(len(x[1]['pwr'])+2, dtype=int)
    pwr_list[1:-1] = np.asarray(x[1]['pwr'])
    pwr_list[len(pwr_list)] = sys.maxint
    observed_sequences.append(pwr_list)
    observed_timestamps.append(ts_list)

X = np.asarray(df['pwr'])
X.reshape((len(X), 1))

#For the very moment we are creating a hidden state for every possible location within the shop. Later we can think of narrowing it down
hidden_states = {}
count = 0
for x in range(-46, 31): #XRange
	for y in range(-10, 45): #YRange
		hidden_states[count] = (x, y)
		count += 1
n_hidden_states = len(hidden_states)

model = hmm.MultinomialHMM(n_components=n_hidden_states).fit(X, len_samples)
model.monitor_
model.monitor_.converged